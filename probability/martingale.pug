ul 
    li Martingale is like this..If you go to roulette. You're looking to make 1 dollar.
    li You bet one on black, then you win! You accomplish your goal of making one dollar.
    li However. If you lose, you rebet 2 dollars on black, if you lose you bet 4 dollars.
    li You keep doubling your bet until you win. With inifnite money, you will never lose, the limit of your probility losing goes to 0.
    li The caveat lies in having infinite money, no one has infinite money so the probability is non zero.
    li But the mind wants to believe that that probabilty non zero is a lot smaller than what it actually is.
    li AS described from my coin flip experiment, it's actually more likely for that small chance to happen given a large amount of trials. 
    a(href="gamble.ipynb") PythonNotebook
    img(src="/images/martingale.png") 
    li Based on my graph, yes you definitely lose. It's just the fact that it takes some time. Is there a statistical way to withdraw before that happens?
    li I'm not sure how easy that is to do. There has to be some math involving the complement. IE: quit before N losses so that your probability of winning is over P.
    li In other words. How many games must you play so that your probability of NOT LOSING is above 80% for example. I am a risk averse person (generally), so I would say that 80% is a good amount.
    li However, the risk is also relative to the amount gained. If I realize that that answer is 5 dollars for instance, I am willing to risk more to gain more.
    li This is more of a psychological problem because I need to calculate my own curve (non-linear thinking) of what percentage I'm willing to have NOT LOSING versus the amount of money I would like to gain 
    li And then plot that against the martingale curve. And see where it intersects..
    li This is so confusing..
    a(href="martingale2.html") Part2
